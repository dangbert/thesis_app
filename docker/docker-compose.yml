name: thesis

x-common-env: &common-env
  ENV: PRD
  SERVER_NAME: ${SERVER_NAME}
  DB_PASS: ${DB_PASS}
  SECRET_KEY: ${SECRET_KEY}
  AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
  AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
  AUTH0_DOMAIN: ${AUTH0_DOMAIN}
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  GPT_MODEL: ${GPT_MODEL}

services:
  backend:
    platform: ${PROD_PLATFORM}
    build:
      context: ../backend
      dockerfile: ./Dockerfile
      target: prod
    environment:
      <<: *common-env
    volumes:
      - ${VOLUMES_DIR}/files:/files

  jobs:
    platform: ${PROD_PLATFORM}
    build:
      context: ../backend
      dockerfile: ./Dockerfile
      target: prod
    environment:
      <<: *common-env
    volumes:
      - ${VOLUMES_DIR}/files:/files
    command: ./jobRunner.py

  nginx:
    platform: ${PROD_PLATFORM}
    build:
      context: ../frontend
      dockerfile: ./Dockerfile
      target: nginx_prod
    ports:
      - 443:443
      - 80:80
    environment:
      - SERVER_NAME=${SERVER_NAME}
      - env=PROD
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/

    command: nginx -g 'daemon off;'

  db:
    platform: ${PROD_PLATFORM}
    image: postgres:14
    ports:
      # using "local loopback interface" so UFW rules are respected
      - 127.0.0.1:5400:5432
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - ${VOLUMES_DIR}/db:/var/lib/postgresql/data
      - ${VOLUMES_DIR}/backups:/backups