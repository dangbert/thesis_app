# this file based on:
#   https://ssl-config.mozilla.org/#server=nginx&version=1.25&config=modern&openssl=1.1.1k&guideline=5.7
#   https://upcloud.com/community/tutorials/install-lets-encrypt-nginx/

server_tokens off;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";

# https://content-security-policy.com/
# test CSP policy here: https://csp-evaluator.withgoogle.com/
#   allowing all iframes sources for now, may restrict in future (e.g. just YouTube, Spotify, etc)...
#   allowing all external media as well, but also may restrict in future or route through a protected subdomain
#   the react app seems to require inline style-src, and data urls for fonts, also something is requiring script-src 'unsafe-eval' (but ignoring for now at least)
add_header Content-Security-Policy "default-src 'self'; script-src 'self'; require-trusted-types-for 'script'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src * data:; media-src *; frame-src *;";

# HTTPS server:
server {
  # require http2 and support IPV6 as well as IPV4
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name ${SERVER_NAME};

  # let's encrypt SSL keys:
  ssl_certificate /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;

  # note: TLS1.3 using ephemeral Diffie-Hellman keys (static keys no longer needed)

  ssl_session_cache shared:SSL:10m;
  # time out duration is debated, several hours is more efficient but risks security
  ssl_session_timeout 60m;

  # supporting only TLS 1.3, we don't have to manually specify the cipher suites
  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_session_tickets off;

  # HSTS (max-age of 2 years)
  #   note: consider joining preload list in future https://hstspreload.org/
  #   omitting includeSubdomains
  add_header Strict-Transport-Security "max-age=63072000;" always;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  root /var/www/personalpedia/html;
  index index.html index.htm index.nginx-debian.html;


  # pass URLs starting with /api or /notes to flask ('^~' means other matches will be overwritten)
  #   https://serverfault.com/q/564127 https://stackoverflow.com/a/45129826
  location ~ /(api|notes)/ {
    include uwsgi_params;
    uwsgi_pass backend:8001;
  }

  location / {
    #try_files $uri $uri/ =404;
    # default to index.html for react urls https://stackoverflow.com/a/43954597
    try_files $uri /index.html;
  }
}

# HTTP redirect:
server {
  listen 80;
  listen [::]:80;
  server_name ${SERVER_NAME};
  return 301 https://$server_name$request_uri;
}
